name: Build yolo tonic images

on:
  push:
    branches:
      - main
    paths:
      - "webcam_capture/**"
      - "yolo_prediction/**"
      - "*.Dockerfile"
  workflow_dispatch:

permissions:
  packages: write
  contents: read

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [webcam_capture, yolo_prediction, yolo_prediction_cuda]
        include:
          - service: webcam_capture
            dockerfile: webcam_capture/Dockerfile
            tag: webcam-capture
          - service: yolo_prediction
            dockerfile: yolo_prediction/Dockerfile
            tag: yolo-prediction
          - service: yolo_prediction_cuda
            dockerfile: yolo_prediction/cuda.Dockerfile
            tag: yolo-prediction-cuda

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Cache YOLO Model
        if: matrix.service == 'yolo_prediction'
        uses: actions/cache@v4
        with:
          path: ./yolo_prediction/models
          key: yolo-model-${{ runner.os }}
          restore-keys: |
            yolo-model-${{ runner.os }}-

      - name: Download YOLO Model if missing
        if: matrix.service == 'yolo_prediction' || matrix.service == 'yolo_prediction_cuda'
        run: |
          if [ ! -f "./yolo_prediction/models/yolov8m.onnx" ]; then
            make download-model
          fi

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.tag }}:latest
            ghcr.io/${{ github.repository }}/${{ matrix.tag }}:${{ github.sha }}
